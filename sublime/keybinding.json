[
	// ctrl + m   (Subl,IDE)
	// delete
	{ "keys": ["alt+i"], "command": "left_delete" },
	// delete word
	{ "keys": ["ctrl+i"],"command": "delete_word", "args": { "forward": false } },

	// delete cursor <- + ->
	{ "keys": ["ctrl+u"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },
	{ "keys": ["ctrl+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },

	// move to head
	{"keys":["alt+h"],   "command":"move_to", "args":{"to":"bol"} },
	// move to tail
	{"keys":["alt+l"],   "command":"move_to", "args":{"to":"eol"} },

	// // move to end & home
	{ "keys": ["ctrl+alt+n"], "command": "move_to", "args": {"to": "eof", "extend": false} },        
	{ "keys": ["ctrl+alt+p"], "command": "move_to", "args": {"to": "bof", "extend": false} },


	// move & select to <- & ->
	{ "keys": ["alt+shift+j"], "command": "move", "args": {"by": "characters", "forward": false, "extend": true} },
	{ "keys": ["alt+shift+k"], "command": "move", "args": {"by": "characters", "forward": true, "extend": true} },

	// move & select (more) to <- & ->
	    // default (not change)
	        // select more <-:   alt + shift + <-
	        // select more ->:   alt + shift + ->
	{ "keys": ["alt+shift+b"], "command": "move", "args": {"by": "subwords", "forward": false, "extend": true} },
	{ "keys": ["alt+shift+f"], "command": "move", "args": {"by": "subword_ends", "forward": true, "extend": true} },


	{ "keys": ["alt+shift+p"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true} },
	{ "keys": ["alt+shift+n"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true} },


	// select to end & home
	{ "keys": ["alt+e"], "command": "move_to", "args": {"to": "eof", "extend": true} },
	{ "keys": ["alt+a"], "command": "move_to", "args": {"to": "bof", "extend": true} },



	// move & select to head & tail
	{ "keys": ["alt+shift+h"], "command": "move_to", "args": {"to": "bol", "extend": true} },
	{ "keys": ["alt+shift+l"], "command": "move_to", "args": {"to": "eol", "extend": true} },


	// select column: (or mouse: ctrl+shift+ left-click)
	{ "keys": ["ctrl+alt+shift+j"], "command": "select_lines", "args": {"forward": true} },
	{ "keys": ["ctrl+alt+shift+k"], "command": "select_lines", "args": {"forward": false} },


	// move <-
	{ "keys": ["alt+j"], "command": "move", "args": {"by": "characters", "forward": false} },
	// move ->
	{ "keys": ["alt+k"], "command": "move", "args": {"by": "characters", "forward": true} },


	// move word <-
	{ "keys": ["alt+b"], "command":"move", "args": {"by": "word_ends", "forward": false}  },
	// move word ->
	{ "keys": ["alt+f"], "command":"move", "args": {"by": "word_ends", "forward": true}  },



	// move line ↓
	{ "keys": ["alt+n"], "command":"move", "args": {"by": "lines", "forward": true}  },
	// move line ↑
	{ "keys": ["alt+p"], "command":"move", "args": {"by": "lines", "forward": false}  },

	// just replace  'enter \n'
	{ "keys": ["alt+space"], "command": "insert", "args": {"characters": "\n"} },


	// swap line
	{ "keys": ["ctrl+alt+shift+p"], "command": "swap_line_up" },
	{ "keys": ["ctrl+alt+shift+n"], "command": "swap_line_down" },

	// fold_all  &  unfold_all
	{ "keys": ["ctrl+alt+u"], "command": "fold_by_level", "args": {"level": 1} },
	{ "keys": ["ctrl+alt+i"], "command": "unfold_all" },

	// fold & unfold
	// { "keys": ["alt+shift+u"], "command": "fold" },
	// { "keys": ["alt+shift+i"], "command": "unfold" },
	// --------------------------------------------------------------- //
	{
	 "keys": ["ctrl+shift+c"],
	 "command": "reindent", 
	 "args": {
	    "single_line": false
	    }
	},
	{ 
	    "keys": ["alt+`"], "command": "toggle_terminus_panel", "args": {
	        "cmd": "wsl.exe",
            "cwd": "${file_path:${folder}}"
	    }
	},
	// Terminus
	{ 
    	"keys": ["ctrl+w"], "command": "terminus_close", "context": [{ "key": "terminus_view"}]
	},

    { 
        "keys": ["alt+t"], "command": "terminus_open", "args": {
            "cmd": "wsl.exe",
            "cwd": "${file_path:${folder}}"
        }
    },
    // AlignTab
	{
	   "keys": ["ctrl+shift+a"], "command": "align_tab",
	   "args": {"live_preview" : true}
	},
]
